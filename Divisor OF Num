import java.util.*;
public class DivisorOfNum {
    public static void main(String[] args) {
        List<Integer> result = new ArrayList<>();
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        for(int i=1; i*i<= n ; i++){
            if(n%i == 0){
                result.add(i);
                if(i!=n/i){
                    result.add(n/i);
                }
            }
        }
        Collections.sort(result);
        System.out.println(result);

        sc.close();
    }
}

-----------------------------------------------------------
Alternate Method

class Solution {
    public int[] divisors(int n) {
        ArrayList<Integer> divisor = new ArrayList();
        for(int i = 1; i<=n; i++){
            if(n%i==0){
                divisor.add(i);
            }
        }

        // convert the ArrayList<Integer> to an int[]

        int [] arr = new int [divisor.size()];
        for(int i=0; i<divisor.size(); i++){
            arr[i] = divisor.get(i);
        }
        return arr;
    }
}


Using Array List I will solve this question 
