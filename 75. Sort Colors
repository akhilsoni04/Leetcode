Time Complexity: O(N)
Space Complexity: O(1)


class Solution {
    public void sortColors(int[] nums) {
        int low = 0;
        int mid = 0;
        int high = nums.length - 1;
        while(mid <= high){
            if(nums[mid] == 0){
                int temp = nums[low];
                nums[low] = nums[mid];
                nums[mid] = temp;
                low++;
                mid++;
            }else if (nums[mid] == 1){
                mid++;
            }else{
                int temp = nums[mid];
                nums[mid] = nums[high];
                nums[high] = temp;
                high--;
            }
        }
    }
}


Alternate method :
Time Complexity: O(N log N)
Space Complexity: O(1) (in-place sorting)

class Solution {
    public void sortColors(int[] nums) {
        Arrays.sort(nums);
    }
}
